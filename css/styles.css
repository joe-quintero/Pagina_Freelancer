:root {									/*Esta es una pseudo-clase, en esta se puede declarar por decir variables de css*/
	--azul: #0833a2;					/*En esta pseudo calse declararemos una paleta de colores*/
	--negro: #000000;
	--amarillo: #FFC433;
	--blanco: #FFFFFF;
	--gris: #757575;
}

/*GLOBALES*/
html{
	font-size: 62.5%; /*se reinica el tamaño del documento*/
  	box-sizing: border-box; /*Al definir un tamaño para algo y aplicar pading no agranda la imagen o el objeto*/
}

*, *:before, *:after {
  box-sizing: inherit;
}

body{
	font-size: 16px;						/* Estas dos primeras lineas hacen que los rem sean sencillos de usar */
	font-family: 'Mukta', sans-serif;		/*1rem = 10px */
	}

.contenedor{
	max-width: 90rem;
	margin: 0 auto ; /*top,right,bottom,left*/
  /*margin: 0 auto; --> En este caso aplicaria ya que por default css toma el primero valor como top y bottom y el segundo valor como right y left*/
}

.boton{
	background-color: var(--azul);
	color: var(--blanco);
	padding: 1rem 3rem;
	margin-top: 2rem;
	font-size: 2rem;
	text-decoration: none;
	text-transform: uppercase;
	font-weight: bold;
	border-radius: .5rem;
	width: 90%;
	text-align: center;
}

@media (min-width: 700px){
	.boton{
		width: auto;
	}
}

/*TIPOGRAFIA*/
h1{
	font-size: 3.8rem;
}

h2{
	font-size: 2.8rem;
}

h3{
	font-size: 1.8rem;
}

h1,h2,h3{
	text-align: center;
}


/*h1.titulo span{ 			/* Este selector es ams especifico, ya que esta tomando la clase titulo de la etiqueta h1 */
	/*font-size: 2rem;		En este caso el orden no hace nada debido a que es mas sespecifico que el selector de abajo 
	color: red;
}*/

/*TOTILOS*/
.titulo span{  				/*Emjeplo de especificidad*/
	text-align: center;
	font-size: 2rem;
}

/*Comentario Prueba Git*/
/*
span{
	font-size: 2rem;
	color: violet !important;  /* este important le pasa por encima a todas las otars declaraciones, por importancia NO RECOMENDADO 
}*/


/*NAVEGACION*/
.nav-bg{
	background-color: var(--azul);
}

.navegacion-principal{
	display: flex; /*este atributo nos habilita poder usar flexbox en el elemento donde se usa esta clase*/
	flex-direction: column;
}	

@media (min-width: 400px){ /*480px (celular), 768px (tablet), 1140px (pc laptop) y 1400px (tv)*/
	.navegacion-principal{
		flex-direction: row;
		justify-content: space-between; /*El contenido se distribuye*/
	}
}

.navegacion-principal a{
	/*display: inline; Todos los elemoentos tienen el display declarado con un valor por defaul, algunos con block o otros son inline*/
					/*La direcencia entre block y inline es que los block se coloca cada elemento debajo del otro, miestras que inline se van colocando a lado*/
	display: block;
	text-align: center;
	color: var(--blanco);
	text-decoration: none;
	font-weight: bold;
	padding: 1rem; /*funciona igual quel margin, solo que este engorda el elemento, la separacion la hace hacia adentro */
  					/*margin-top: 10rem;*/	/*Separa el elemento colocando ina distancia de 10rem desde el elemento de arriba hasta el mismo*/
}	

.navegacion-principal a:hover { /*el :hover es una pseudo-clase que se activa al interactar con el elemento, en este caso con el enlace de la clase*/
	background-color: var(--amarillo);
	color: var(--negro);
}

/*HERO*/
.hero{
	background-image: url(../img/hero1.jpg);
	background-repeat: no-repeat;
	background-size: cover;
	height: 450px;
	/*padding: 20px;*/
	position: relative;
}

.contenido-hero{
	position: absolute;
	background-color: rgba(0,0,0, .7); /*anterior*/
	background-color: rgb(0 0 0 / 50%); /*Nueva forma*/
	width: 100%;
	height: 100%;	

	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.contenido-hero h2,
.contenido-hero p{
	color: var(--blanco);
}

.contenido-hero-ubicacion{
	display: flex;
}